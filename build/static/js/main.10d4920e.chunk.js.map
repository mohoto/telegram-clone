{"version":3,"sources":["components/SidebarThread.js","components/Sidebar.js","userSlice.js","components/Thread.js","components/Telegram.js","misc/firebase.js","components/Login.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["SidebarThread","className","Avatar","Sidebar","type","placeholder","IconButton","variant","userSlice","createSlice","name","initialState","user","reducers","loginUser","state","action","payload","username","logout","actions","selectUser","login","useReducer","reducer","options","Thread","useSelector","dispatch","useDispatch","logOut","useState","input","setInput","anchorEl","setAnchorEl","open","Boolean","handleClose","dispalyName","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","width","map","option","MenuItem","selected","value","onChange","e","target","preventDefault","console","log","Telegram","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","googleProvider","GoogleAuthProvider","firestore","Login","src","alt","Button","signInWithPopup","then","response","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10d4920e.chunk.js","sourcesContent":["/*rfce*/\nimport React from 'react';\nimport './SidebarThread.css';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst SidebarThread = () => {\n    return (\n        <div className=\"sidebarThread\">\n            <Avatar />\n            <div className=\"sidebarThread__details\">\n                <h3>Thread Name</h3>\n                <p>This is the info</p>\n                <small className=\"sidebarThread__timestamp\">Timestamp</small>\n            </div>\n        </div>\n    )\n}\n\nexport default SidebarThread\n\n","import React from 'react';\nimport './Sidebar.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BorderColorOutlinedIcon from '@material-ui/icons/BorderColor';\nimport IconButton from '@material-ui/core/IconButton';\nimport SidebarThread from './SidebarThread';\nimport Avatar from '@material-ui/core/Avatar';\nimport PhoneOutlinedIcon from '@material-ui/icons/PhoneOutlined';\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\nimport SettingsApplicationsOutlinedIcon from '@material-ui/icons/SettingsApplicationsOutlined';\n\nexport default function Sidebar() {\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <div className=\"sidebar__search\">\n                    <SearchIcon />\n                    <input type=\"text\" placeholder=\"Recherche\" className=\"sidebar__searchInput\" />\n                </div>\n                <IconButton variant=\"outlined\" className=\"sidebar__button\">\n                    <BorderColorOutlinedIcon />\n                </IconButton>\n            </div>\n            <div className=\"sidebar__threads\">\n                <SidebarThread />\n                <SidebarThread />\n                <SidebarThread />\n            </div>\n            <div className=\"sidebar__bottom\">\n                <Avatar className=\"sidebar__bottom__avatar\" />\n                <IconButton>\n                    <PhoneOutlinedIcon />\n                </IconButton>\n                <IconButton>\n                    <QuestionAnswerOutlinedIcon />\n                </IconButton>\n                <IconButton>\n                    <SettingsApplicationsOutlinedIcon />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst userSlice = createSlice({\n    name: 'login',\n    initialState: {\n        user: null\n    },\n    reducers: {\n        loginUser: (state, action) => {\n            state.user = action.payload.username\n        },\n        logout: (state) => {\n            state.user = null\n        }\n    }\n})\n\nexport const { loginUser, logout } = userSlice.actions;\n\nexport const selectUser = state => state.login.user;\n\nconst useReducer = userSlice.reducer;\n\nexport default useReducer;","import React, { useState } from 'react';\nimport './Thread.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../userSlice';\nimport { selectUser } from '../userSlice';\n\nconst options = [\n    'Deconnexion',\n    'Profile'\n\n];\n\nconst ITEM_HEIGHT = 48;\n\nexport default function Thread() {\n\n    const user = useSelector(selectUser);\n\n    /***LogOut**/\n    const dispatch = useDispatch();\n    const logOut = () => {\n        dispatch(logout());\n    }\n\n    const [input, setInput] = useState('');\n\n    const sendMessage = e => {\n        e.preventDefault();\n        setInput('')\n        console.log(input);\n    }\n    /******Menu More************/\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className=\"thread\">\n            <div className=\"thread__header\">\n                <div className=\"thread__header__contents\">\n                    <Avatar />\n                    <div className=\"thread__header__contents__info\">\n                        <h4>{user.dispalyName}</h4>\n                        <h5>Last seen</h5>\n                    </div>\n                </div>\n                <IconButton\n                    aria-label=\"more\"\n                    aria-controls=\"long-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={handleClick}\n                >\n                    <MoreHorizIcon className=\"thread__header__details\" />\n                </IconButton>\n                <Menu\n                    id=\"long-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={open}\n                    onClose={handleClose}\n                    PaperProps={{\n                        style: {\n                            maxHeight: ITEM_HEIGHT * 4.5,\n                            width: '20ch',\n                        },\n                    }}\n                >\n                    {options.map((option) => (\n                        <MenuItem key={option} selected={option === 'Deconnexion'} onClick={option === 'Deconnexion' ? logOut : handleClose}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </div>\n            <div className=\"thread__messages\">\n                <div className=\"thread__input\">\n                    <form>\n                        <input placeholder=\"message\" value={input} onChange={e => setInput(e.target.value)} />\n                        <IconButton>\n                            <SendIcon type=\"submit\" className=\"thread__messages__button\" onClick={sendMessage} />\n                        </IconButton>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Telegram.css';\nimport Sidebar from './Sidebar';\nimport Thread from './Thread';\n\nexport default function Telegram() {\n    return (\n        <div className=\"telegram\">\n            <Sidebar />\n            <Thread />\n        </div>\n    )\n}\n","import firebase from 'firebase'\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCwSCZi0QVI7hOuN1czWK2WpSmg7xa7JXc\",\n    authDomain: \"telegram-clone-64646.firebaseapp.com\",\n    databaseURL: \"https://telegram-clone-64646.firebaseio.com\",\n    projectId: \"telegram-clone-64646\",\n    storageBucket: \"telegram-clone-64646.appspot.com\",\n    messagingSenderId: \"545137159103\",\n    appId: \"1:545137159103:web:1619c6abb14eb2aca5cf0a\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst db = firebaseApp.firestore();\n\nexport { auth, googleProvider };\nexport default db;","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport './Login.css';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../userSlice';\nimport { auth, googleProvider } from '../misc/firebase'\n\nexport default function Login() {\n\n    const dispatch = useDispatch();\n\n    const signIn = () => {\n        auth\n            .signInWithPopup(googleProvider)\n            .then(response => {\n                dispatch(loginUser({\n                    username: response.user\n                }))\n            })\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/8/82/Telegram_logo.svg\" alt=\"logo google\" />\n                <Button variant=\"contained\" onClick={signIn}>\n                    Se connecter avec google\n                </Button>\n            </div>\n        </div >\n    )\n}\n","import Telegram from './components/Telegram';\nimport Login from './components/Login';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './userSlice';\n\nfunction App() {\n\n  /* const { user } = useSelector(state => ({\n    ...state.user\n  })); */\n\n  const user = useSelector(selectUser);\n\n  return (\n    <div className=\"App\">\n      {!user ? (\n        <Login />\n      ) : (\n          <Telegram />\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './userSlice'\n\nconst store = configureStore({\n    reducer: {\n        login: userReducer\n    }\n})\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}